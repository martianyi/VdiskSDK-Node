{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nconst fs = require('fs');\nconst querystring = require('querystring');\nconst request = require('request');\n\n/**\n * oauth2 client\n */\nclass OAuth2 {\n\n    /**\n     * Constructor\n     * @param app_key 申请应用时分配的AppKey\n     * @param app_secret 申请应用时分配的AppSecret\n     * @param call_back_url\n     */\n    constructor(app_key, app_secret, call_back_url) {\n        this.version = '0.1.0';\n        this.ACCESS_TOKEN_URL = \"https://auth.sina.com.cn/oauth2/access_token\";\n        this.AUTHORIZE_URL = \"https://auth.sina.com.cn/oauth2/authorize\";\n        this.app_key = app_key;\n        this.app_secret = app_secret;\n        this.call_back_url = call_back_url;\n    }\n\n    /**\n     * Get the authorization url\n     * @param response_type 返回类型，支持code、token，默认值为code\n     * @param display 授权页面的终端类型 default/mobile/popup\n     * @param state 用于保持请求和回调的状态，在回调时，会在Query Parameter中回传该参数\n     * @returns {string}\n     */\n    authorize({response_type = \"code\", display = \"default\", state = \"\"}={}) {\n        let data = {\n            \"client_id\": this.app_key,\n            \"redirect_uri\": this.call_back_url,\n            \"response_type\": response_type,\n            \"display\": display\n        };\n        if (state.length > 0) {\n            data[\"state\"] = state\n        }\n        return this.AUTHORIZE_URL + \"?\" + querystring.stringify(data);\n    }\n\n    /**\n     * Get access token\n     * @param grant_type  请求的类型 authorization_code/refresh_token\n     * @param code grant_type为authorization_code时传入\n     * @param refresh_token grant_type为refresh_token时传入\n     * @param cb 回调函数，接收error和response两个参数\n     */\n    accessToken({grant_type = \"authorization_code\", code = \"\", refresh_token = \"\"}={}, cb) {\n        let data = {\n            \"client_id\": this.app_key,\n            \"client_secret\": this.app_secret,\n            \"grant_type\": grant_type\n        };\n        if (grant_type === \"authorization_code\") {\n            data[\"code\"] = code;\n            data[\"redirect_uri\"] = this.call_back_url\n        }\n        else if (grant_type == \"refresh_token\") {\n            data[\"refresh_token\"] = refresh_token\n        }\n        const url = this.ACCESS_TOKEN_URL;\n        request.post({\n            url: url,\n            form: data\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.code) {\n                return cb(new Error(`请求失败: (${response.code}) ${response.msg}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n}\n\n/**\n * vdisk client\n */\nclass Client {\n\n    /**\n     * Constructor\n     * @param root  sandbox/basic\n     */\n    constructor(root = \"sandbox\") {\n        this.version = '0.1.0';\n        this.API_URL = 'https://api.weipan.cn/2/';\n        this.WEIBO_URL = 'https://api.weipan.cn/weibo/';\n        this.UPLOAD_HOST = 'upload-vdisk.sina.com.cn';\n        this.CONTENT_SAFE_URL = 'https://' + this.UPLOAD_HOST + '/2/';\n        this.root = root;\n    }\n\n    /**\n     * Get account info\n     * @param access_token 接口获取授权后的access token\n     * @param cb 回调函数，接收error和response两个参数\n     */\n    accountInfo(access_token, cb) {\n        request({\n            url: this.API_URL + 'account/info',\n            headers: {\n                'Authorization': 'OAuth2 ' + access_token\n            }\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.code) {\n                return cb(new Error(`请求失败: (${response.code}) ${response.msg}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Get metadata 获取文件和目录信息\n     * @param access_token\n     * @param path\n     * @param cb\n     */\n    metadata({access_token, path=''}={}, cb) {\n        request({\n            url: this.API_URL + 'metadata/' + this.root + '/' + path,\n            headers: {\n                'Authorization': 'OAuth2 ' + access_token\n            }\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Delta\n     * @param access_token\n     * @param cursor\n     * @param cb\n     */\n    delta({access_token, cursor=''}={}, cb) {\n        let param = {},\n            url = this.API_URL + 'delta/' + this.root;\n        if (cursor.length > 0) {\n            param['cursor'] = cursor;\n            url += '?' + querystring.stringify(param);\n        }\n        request.post({\n            url: url,\n            headers: {\n                'Authorization': 'OAuth2 ' + access_token\n            }\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Get files\n     * @param access_token\n     * @param path\n     * @param rev\n     * @param cb\n     */\n    files({access_token, path='', rev = ''}={}, cb) {\n        let param = {},\n            url = this.API_URL + 'files/' + this.root + \"/\" + path;\n        if (rev.length > 0) {\n            param['rev'] = rev;\n            url += '?' + querystring.stringify(param);\n        }\n        request({\n            url: url,\n            headers: {\n                'Authorization': 'OAuth2 ' + access_token\n            }\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Get revisions 获得文件的历史版本\n     * @param access_token\n     * @param path\n     * @param cb\n     */\n    revisions({access_token,path}={}, cb) {\n        request({\n            url: this.API_URL + 'revisions/' + this.root + \"/\" + path,\n            headers: {\n                'Authorization': 'OAuth2 ' + access_token\n            }\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Save files\n     * @param access_token\n     * @param path\n     * @param files\n     * @param overwrite\n     * @param sha1\n     * @param size\n     * @param parent_rev\n     * @param cb\n     */\n    saveFiles({access_token,path=\"\",files,overwrite = \"true\",sha1 = \"\",size = \"\", parent_rev = \"\"}={}, cb) {\n        let param = {\n            access_token: access_token,\n            overwrite: overwrite\n        };\n        if (sha1.length > 0) param[\"sha1\"] = sha1;\n        if (size.length > 0) param[\"size\"] = size;\n        if (parent_rev.length > 0) param[\"parent_rev\"] = parent_rev;\n\n        let queries = querystring.stringify(param);\n\n        let url = this.CONTENT_SAFE_URL + 'files/' + this.root + \"/\" + path + \"?\" + queries;\n\n        let formData = {\n            file: fs.createReadStream(files)\n        };\n\n        request.post({\n            rejectUnauthorized: false,\n            url: url,\n            formData: formData\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        });\n    }\n\n    /**\n     * Update files\n     * @param access_token\n     * @param path\n     * @param files\n     * @param overwrite\n     * @param sha1\n     * @param size\n     * @param parent_rev\n     * @param cb\n     */\n    updateFiles({access_token,path,files,overwrite = \"true\",sha1 = \"\",size = \"\", parent_rev = \"\"}={}, cb) {\n\n        let param = {\n            \"access_token\": access_token,\n            \"overwrite\": overwrite\n        };\n        if (sha1.length > 0)  param[\"sha1\"] = sha1;\n        if (size.length > 0) param[\"size\"] = size;\n        if (parent_rev.length > 0) param[\"parent_rev\"] = parent_rev;\n\n        let host = this.UPLOAD_HOST,\n            api = '/2/files_put/' + this.root + \"/\" + path + \"?\" + querystring.stringify(param);\n        let url = 'http://' + host + api;\n\n        let formData = {\n            file: fs.createReadStream(files)\n        };\n\n        request.put({\n            rejectUnauthorized: false,\n            url: url,\n            formData: formData\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Shares 描述创建并返回一个此分享文件的链接\n     * @param access_token\n     * @param path\n     * @param cancel\n     * @param cb\n     */\n    shares({access_token,path,cancel = \"false\"}={}, cb) {\n        let param = {\n                \"access_token\": access_token,\n                \"cancel\": cancel\n            },\n            url = this.API_URL + 'shares/' + this.root + \"/\" + path + '?' + querystring.stringify(param);\n\n        request.post({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Restore 还原文件到某个版本\n     * @param access_token\n     * @param path\n     * @param rev\n     * @param cb\n     */\n    restore({access_token,path,rev = \"\"}={}, cb) {\n        let param = {\n            \"access_token\": access_token\n        };\n        let url = this.API_URL + 'restore/' + this.root + \"/\" + path + '?' + querystring.stringify(param);\n        request.post({\n            url: url,\n            form: {\"rev\": rev}\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Search 返回符合搜索的所有文件和目录信息。搜索权限于指定的目录路径及其下级目录\n     * @param access_token\n     * @param path\n     * @param query\n     * @param file_limit\n     * @param include_deleted\n     * @param cb\n     */\n    search({access_token,path=\"\",query,file_limit = 1000,include_deleted = \"false\"}={}, cb) {\n\n        let url = this.API_URL + 'search/' + this.root + \"/\" + path;\n\n        let param = {\n            \"access_token\": access_token,\n            \"query\": query,\n            \"file_limit\": file_limit,\n            \"include_deleted\": include_deleted\n        };\n\n        url += '?' + querystring.stringify(param);\n\n        request({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n\n    }\n\n    /**\n     * Get copy_ref 创建一个可以转存此分享文件的标识字符串\n     * @param access_token\n     * @param path\n     * @param cb\n     */\n    copyRef({access_token,path}={}, cb) {\n        let url = this.API_URL + 'copy_ref/' + this.root + \"/\" + path,\n            param = {\n                \"access_token\": access_token\n            };\n        url += '?' + querystring.stringify(param);\n\n        request.post({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Get media 获取文件下载和播放的链接\n     * @param access_token\n     * @param path\n     * @param cb\n     */\n    media({access_token,path}={}, cb) {\n        let url = this.API_URL + 'media/' + this.root + \"/\" + path,\n            param = {\n                \"access_token\": access_token\n            };\n        url += '?' + querystring.stringify(param);\n        request({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Get thumbnails 获取图片文件的缩略图\n     * @param access_token\n     * @param path\n     * @param size s:60x60,m:100x100,l:640x480,xl:1027x768\n     * @param cb\n     */\n    thumbnails({access_token,path,size}={}, cb) {\n        let url = this.API_URL + 'thumbnails/' + this.root + \"/\" + path,\n            param =\n            {\n                \"access_token\": access_token,\n                \"size\": size\n            };\n        url += '?' + querystring.stringify(param);\n        request({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Copy Files 复制一个对象。当前目录下的目录和文件总数不超过 10000 个时，可以执行此操作。超过此限额时，请进入更深层的目录分批操作。\n     * @param access_token\n     * @param to_path\n     * @param from_path\n     * @param from_copy_ref\n     * @param cb\n     */\n    copyFiles({access_token,to_path,from_path = \"\",from_copy_ref = \"\"}={}, cb) {\n        let url = this.API_URL + 'fileops/copy',\n            param = {\n                \"access_token\": access_token\n            },\n            data = {\n                \"root\": this.root,\n                \"to_path\": to_path\n            };\n        if (from_path.length > 0) data['from_path'] = from_path;\n        if (from_copy_ref.length > 0) data['from_copy_ref'] = from_copy_ref;\n        url += '?' + querystring.stringify(param);\n\n        request.post({\n            url: url,\n            form: data\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Delete files 删除一个对象。当前目录下的目录和文件总数不超过 10000 个时，可以执行此操作。超过此限额时，请进入更深层的目录分批操作。\n     * @param access_token\n     * @param path\n     * @param cb\n     */\n    delFiles({access_token, path}={}, cb) {\n        let url = this.API_URL + 'fileops/delete',\n            param = {\n                \"access_token\": access_token\n            },\n            data = {\n                \"root\": this.root,\n                \"path\": path\n            };\n        url += '?' + querystring.stringify(param);\n\n        request.post({\n            url: url,\n            form: data\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Move files 移动一个对象,当前目录下的目录和文件总数不超过 5000 个时，可以执行此操作。超过此限额时，请进入更深层的目录分批操作\n     * @param access_token\n     * @param from_path\n     * @param to_path\n     * @param cb\n     */\n    moveFiles({access_token,from_path = \"\",to_path = \"\"}={}, cb) {\n\n        let param = {\n                \"access_token\": access_token\n            },\n            data = {\n                \"root\": this.root\n            },\n            url = this.API_URL + 'fileops/move?' + querystring.stringify(param);\n        if (from_path.length > 0)data['from_path'] = from_path;\n        if (to_path.length > 0)data['to_path'] = to_path;\n\n        request.post({\n            url: url,\n            form: data\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Create folder 创建目录. 一个目录下最多允许创建 1000 个子目录。\n     * @param access_token\n     * @param path\n     * @param cb\n     */\n    createFolder({access_token,path}={}, cb) {\n        let param = {\n                \"access_token\": access_token\n            },\n            data = {\n                \"root\": this.root,\n                \"path\": path\n            },\n            url = this.API_URL + 'fileops/create_folder?' + querystring.stringify(param);\n        request.post({\n            url: url,\n            form: data\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Get share media 获取分享文件下载和播放的链接\n     * @param access_token\n     * @param from_copy_ref 拷贝引用\n     * @param cb 回调函数\n     */\n    shareMedia({access_token,from_copy_ref}={}, cb) {\n        let url = this.API_URL + 'shareops/media',\n            param = {\n                \"access_token\": access_token,\n                \"from_copy_ref\": from_copy_ref\n            };\n        url += '?' + querystring.stringify(param);\n        request({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n\n    /**\n     * Share search 搜索分享的文件\n     * @param access_token\n     * @param query 搜索关键词,可以传多个值，以\\|分隔。如query= txt\\|pdf\\|rar；按组查询时，可选doc,img,video,audio,else中一种\n     * @param type 搜索类型，1：全文件检索，2：按名称3：按标题，4：按描述5：按文件(夹)类型，6：按后缀，7：按组查询。 可以传多个type，如2:5:6，此时query值也以:分隔，表示各个type对应的query值，例如：query=web:doc并且type=3:7就表示查询分组是文档的并且标题中有关键字web的文件。\n     * @param sort_order 排序字段,可以传多个，可用的值为：sharetime(分享时间),price(价格),degree(星级),count_download(下载量),bytes(大小)，可以传多个，以:分隔\n     * @param page 当前页数（取值范围1-40）,默认1\n     * @param page_size 每页大小（取值范围1-9999），默认20\n     * @param cb 回调函数\n     */\n    shareSearch({access_token, query='', type='', sort_order='sharetime',page='1', page_size='20'}={}, cb) {\n        let url = this.API_URL + 'share/search',\n            param = {\n                \"access_token\": access_token\n            };\n        if (query.length > 0)param['query'] = query;\n        if (type.length > 0)param['type'] = type;\n        if (sort_order.length > 0)param['sort_order'] = sort_order;\n        if (page.length > 0)param['page'] = page;\n        if (page_size.length > 0)param['page_size'] = page_size;\n        url += '?' + querystring.stringify(param);\n        request({\n            url: url\n        }, function (err, resp, body) {\n            if (err) return cb(new Error('请求失败: ' + err));\n            // handle server errors\n            if (resp.statusCode >= 500 && resp.statusCode <= 599) {\n                return cb(new Error('服务器内部错误: (' + resp.statusCode + ') ' + body));\n            }\n            var response = JSON.parse(body);\n            if (response.error_code) {\n                return cb(new Error(`请求失败: ${response.error}`))\n            } else {\n                return cb(null, response);\n            }\n        })\n    }\n}\n\nexports.OAuth2 = OAuth2;\nexports.Client = Client;"],"sourceRoot":"/source/"}